# File: docker-compose.yml

version: '3.8'

services:
  # Database Service (PostgreSQL)
  db:
    image: postgres:14-alpine
    container_name: realworld-db
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      # Mount the named volume to the postgres data directory for persistence
      - postgres-data:/var/lib/postgresql/data
    ports:
      # Optional: Expose the DB port to the host for debugging with a DB client
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  # Backend Service (Express.js API)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: realworld-backend
    ports:
      - "3001:3001"
    env_file:
      - ./.env
    
    # 'depends_on' with condition ensures the backend only starts after the DB is healthy
    depends_on:
      db:
        condition: service_healthy

  # Frontend Service (React App served by NGINX)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: realworld-frontend
    ports:
      - "3000:80"
    # Ensures the backend is running before the frontend starts
    depends_on:
      - backend

# Named volume for persistent database storage
volumes:
  postgres-data: